---
title: "Final Project"
author: "Sienna Wang, Hengyi Xing"
date: "2024-11-03"
format: 
  pdf:
    include-in-header: 
       text: |
         \usepackage{fvextra}
         \DefineVerbatimEnvironment{Highlighting}{Verbatim}{breaklines,commandchars=\\\{\}}
include-before-body:
  text: |
    \RecustomVerbatimEnvironment{verbatim}{Verbatim}{
      showspaces = false,
      showtabs = false,
      breaksymbolleft={},
      breaklines
    }
output:
  echo: false
  eval: false
---

```{python}
import pandas as pd
import altair as alt
alt.renderers.enable("png")
import geopandas as gpd
import matplotlib.pyplot as plt
```

```{python}
# Read in the GTD dataset
path = '/Users/hengyix/Documents/GitHub/DAP2-FINAL/data/'
file_gtd = 'globalterrorismdb.csv'
df_gtd = pd.read_csv(path+file_gtd)
```

```{python}
gtd_clean = df_gtd[['iyear', 'country', 'country_txt', 'gname',
                 'attacktype1', 'attacktype1_txt', 'nkill', 'nwound', 'motive']]
# Focos on the 21st century
gtd_clean = gtd_clean[gtd_clean['iyear'] > 1999]
gtd_clean['nhurt'] = gtd_clean['nkill'] + gtd_clean['nwound']
```

```{python}
# Data cleaning for the two maps
gtd_map = gtd_clean.groupby('country_txt').agg(
    attack_count=('country_txt', 'size'),
    casualties=('nhurt', 'sum')
).reset_index()

# Read in the shapefile
file_shape = (
    'world-administrative-boundaries/world-administrative-boundaries.shp')
world_shapefile = gpd.read_file(path+file_shape)
world_shapefile = world_shapefile[['name', 'geometry']]

# Match the countries with the shapefile
# Match the format according to the shapefile
gtd_map.loc[gtd_map['country_txt'] == 'Serbia', 'attack_count'] += 162
gtd_map.loc[gtd_map['country_txt'] == 'Serbia', 'attack_count'] += 11
gtd_map.loc[gtd_map['country_txt'] == 'Serbia', 'casualties'] += 279
gtd_map.loc[gtd_map['country_txt'] == 'Serbia', 'casualties'] += 8
gtd_map.loc[gtd_map['country_txt'] == 'Yugoslavia', 'attack_count'] += 106
gtd_map.loc[gtd_map['country_txt'] == 'Yugoslavia', 'casualties'] += 91

# Adjust country names in the shapefile to handle NAs manually
name_dict = {'Bosnia & Herzegovina': 'Bosnia-Herzegovina',
             'Brunei Darussalam': 'Brunei',
             'Timor-Leste': 'East Timor',
             'Iran (Islamic Republic of)': 'Iran',
             "CÃ´te d'Ivoire": 'Ivory Coast',
             "Lao People's Democratic Republic": 'Laos',
             'Libyan Arab Jamahiriya': 'Libya',
             'The former Yugoslav Republic of Macedonia': 'Yugoslavia',
             'Moldova, Republic of': 'Moldova',
             'Congo': 'Republic of the Congo',
             'Russian Federation': 'Russia',
             'Slovakia': 'Slovak Republic',
             'Republic of Korea': 'South Korea',
             'Saint Lucia': 'St. Lucia',
             'Syrian Arab Republic': 'Syria',
             'United Republic of Tanzania': 'Tanzania',
             'U.K. of Great Britain and Northern Ireland': 'United Kingdom',
             'United States of America': 'United States',
             'West Bank': 'West Bank and Gaza Strip',
             }
world_shapefile['name'] = world_shapefile['name'].map(
    name_dict).fillna(world_shapefile['name'])

gtd_map = pd.merge(world_shapefile, gtd_map,
                   left_on='name', right_on='country_txt', how='left').fillna(0)
```

```{python}
fig, ax = plt.subplots(1, 1, figsize=(10, 5))
gtd_map.plot(column='attack_count', ax=ax, legend=True,
         legend_kwds={
             'label': "Attack Count by Country",
             'orientation': "vertical",
             'shrink': 0.5,      
             'aspect': 20,       
             'pad': 0.01,       
             'anchor': (0.2, 0.5)
         },
         cmap='Reds')  


ax.set_facecolor('lightblue')
ax.set_xticks([]) 
ax.set_yticks([]) 
plt.title('Global Attack Count Heatmap')
plt.show()
```

```{python}
fig, ax = plt.subplots(1, 1, figsize=(10, 5))
gtd_map.plot(column='casualties', ax=ax, legend=True,
         legend_kwds={
             'label': "Casualty by Country",
             'orientation': "vertical",
             'shrink': 0.5,      
             'aspect': 20,       
             'pad': 0.01,       
             'anchor': (0.2, 0.5)
         },
         cmap='Reds')  


ax.set_facecolor('lightblue')
ax.set_xticks([]) 
ax.set_yticks([]) 
plt.title('Global Attack Casualty Heatmap')
plt.show()
```
